apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

ext {
    bintrayRepo = 'Essentials' // your repo name
    bintrayName = 'android-essentials' // has to be same as your library module name
    publishedGroupId = 'com.ancient.essentials' // your module package name
    libraryName = 'android-essentials'
    artifact = 'android-essentials' // has to be same as your library module name
    libraryDescription = 'Base essential components for android application to quick start.'
    siteUrl = 'https://github.com/naveenkumarn27/android-essentials'
    gitUrl = 'https://github.com/naveenkumarn27/android-essentials.git'
    libraryVersion = '1.1.1'
    developerId = 'naveenkumarn27'
    developerName = 'Naveen Kumar Kuppan'
    developerEmail = 'naveenkumarn2@gmail.com'
    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ["Apache-2.0"]
}


android {
    compileSdkVersion rootProject.ext.sdk.compile
    buildToolsVersion rootProject.ext.sdk.build_tool

    defaultConfig {

        minSdkVersion rootProject.ext.sdk.min
        targetSdkVersion rootProject.ext.sdk.max

        versionCode rootProject.ext.app.code
        versionName rootProject.ext.app.name

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }

    dataBinding {
        enabled = true
    }

    buildTypes {

        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    api fileTree(dir: 'libs', include: ['*.jar'])

    // Kotlin support libs
    api "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$plugin.kotlin"

    // Extensions = ViewModel + LiveData
    api "androidx.lifecycle:lifecycle-extensions:$libs.lifecycle"
    kapt "androidx.lifecycle:lifecycle-compiler:$libs.lifecycle"

    // Android support libs
    api "com.google.android.material:material:$libs.material"
    api "androidx.appcompat:appcompat:$libs.appcompat"
    api "androidx.constraintlayout:constraintlayout:$libs.constraint"
    api "androidx.core:core-ktx:$libs.core"
    api "androidx.swiperefreshlayout:swiperefreshlayout:$libs.refresh"
    api "androidx.security:security-crypto:$libs.secure"

    //Retrofit
    api "com.squareup.retrofit2:retrofit:$libs.retrofit"
    api "com.squareup.retrofit2:converter-gson:$libs.retrofit_gson"

    // Coroutines
    api "org.jetbrains.kotlinx:kotlinx-coroutines-core:$libs.coroutines"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-android:$libs.coroutines"

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}

if (project.rootProject.file('local.properties').exists()) {
    apply from: 'https://raw.githubusercontent.com/numetriclabz/jcenter/master/installv.gradle'
    apply from: 'https://raw.githubusercontent.com/numetriclabz/jcenter/master/bintrayv.gradle'
}